{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","httpClient.ts","getTodos.ts","components/TodoModal/TodoModal.tsx","getPosts.ts","App.tsx","index.tsx"],"names":["TodoList","todos","setChosenTodo","setIsModalLoading","chosenTodo","className","map","todo","id","title","completed","cn","type","onClick","Object","keys","length","TodoFilter","filter","setFilter","query","value","filteredBy","onChange","e","target","placeholder","style","pointerEvents","Loader","getData","url","fullURL","fetch","then","response","ok","Error","json","TodoModal","setTodo","isLoading","setIsLoading","useState","post","setPost","userId","useEffect","getPosts","data","finally","href","email","name","App","setTodos","isModalLoading","errorMessage","setErrorMessage","catch","message","filteredTodos","useMemo","filteredByTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ac6c621.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setChosenTodo: (par: Todo) => void;\n  setIsModalLoading: (par: boolean) => void;\n  chosenTodo: Todo,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setChosenTodo,\n  setIsModalLoading,\n  chosenTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos?.map((todo) => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        function handleButton() {\n          setChosenTodo(todo);\n          setIsModalLoading(true);\n        }\n\n        return (\n          <tr key={id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={handleButton}\n              >\n                <span className=\"icon\">\n                  <i className={cn({\n                    'far fa-eye': !Object.keys(chosenTodo).length,\n                    'far fa-eye-slash': Object.keys(chosenTodo).length,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Filter {\n  filteredBy: string;\n  query: string;\n}\n\ntype Props = {\n  filter: Filter;\n  setFilter: (par: Filter) => void;\n};\n\nexport const TodoFilter: FC<Props> = ({ filter, setFilter }) => {\n  const { query } = filter;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filter.filteredBy}\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter({\n              ...filter, filteredBy: e.target.value,\n            })}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(e) => setFilter({ ...filter, query: e.target.value })}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => setFilter({ ...filter, query: '' })}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function getData<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}.json`;\n\n  return fetch(fullURL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Error');\n      }\n\n      return response.json();\n    });\n}\n","import { getData } from './httpClient';\nimport { Todo } from './types/Todo';\n\nexport const getTodos = () => {\n  return getData<Todo[]>('/todos');\n};\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getPosts } from '../../getPosts';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setTodo: (par: Todo) => void;\n  isLoading: boolean;\n  setIsLoading: (par: boolean) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setTodo,\n  isLoading,\n  setIsLoading,\n}) => {\n  const [post, setPost] = useState<User>({} as User);\n\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = todo;\n\n  useEffect(() => {\n    getPosts(userId)\n      .then(data => setPost(data))\n      .finally(() => setIsLoading(false));\n  }, [post]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo({} as Todo)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                { completed ? 'Done' : 'Planned' }\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${post.email}`}>\n                {post.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { getData } from './httpClient';\nimport { User } from './types/User';\n\nexport const getPosts = (userId: number) => {\n  return getData<User>(`/users/${userId}`);\n};\n","/* eslint-disable max-len */\nimport React, { useMemo, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './getTodos';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([] as Todo[]);\n  const [filter, setFilter] = useState({ filteredBy: 'all', query: '' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalLoading, setIsModalLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [chosenTodo, setChosenTodo] = useState<Todo>({} as Todo);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((data) => setTodos(data))\n      .catch((e) => setErrorMessage(e.message))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    const filteredByTodos = todos.length ? todos.filter((todo) => {\n      const { completed } = todo;\n      const { filteredBy } = filter;\n\n      switch (filteredBy) {\n        case 'all':\n          return true;\n        case 'active':\n          return !completed;\n        case 'completed':\n          return completed;\n        default:\n          return true;\n      }\n    })\n      : [];\n\n    const { query } = filter;\n\n    const filteredByQueryTodos = query\n      ? filteredByTodos.filter((todo) => todo.title\n        .toLowerCase().includes(query.toLowerCase())) : filteredByTodos;\n\n    return filteredByQueryTodos;\n  }, [filter.filteredBy, filter.query, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} setFilter={setFilter} />\n            </div>\n            {isLoading && !errorMessage && <Loader />}\n\n            {!isLoading && (\n              <div className=\"block\">\n                <TodoList\n                  chosenTodo={chosenTodo}\n                  setIsModalLoading={setIsModalLoading}\n                  todos={filteredTodos}\n                  setChosenTodo={setChosenTodo}\n                />\n              </div>\n            )}\n\n            {errorMessage && <p>{errorMessage}</p>}\n          </div>\n        </div>\n      </div>\n\n      {Object.keys(chosenTodo).length\n      && <TodoModal isLoading={isModalLoading} setIsLoading={setIsModalLoading} setTodo={setChosenTodo} todo={chosenTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}